// <auto-generated />
using System;
using GridDataWebAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GridDataWebAPI.Migrations
{
    [DbContext(typeof(GridDataContext))]
    [Migration("20240505192526_InitialSetup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GridDataWebAPI.Models.Grid", b =>
                {
                    b.Property<int>("GridId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GridId"));

                    b.Property<string>("GridName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("GridId");

                    b.HasIndex("RegionId");

                    b.ToTable("Grid");
                });

            modelBuilder.Entity("GridDataWebAPI.Models.Measures", b =>
                {
                    b.Property<int>("MeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasureId"));

                    b.Property<int>("NodeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TargetTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("MeasureId");

                    b.HasIndex("NodeId");

                    b.ToTable("Measures");
                });

            modelBuilder.Entity("GridDataWebAPI.Models.Nodes", b =>
                {
                    b.Property<int>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NodeId"));

                    b.Property<string>("NodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("NodeId");

                    b.HasIndex("RegionId");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("GridDataWebAPI.Models.Regions", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"));

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegionId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("GridDataWebAPI.Models.Grid", b =>
                {
                    b.HasOne("GridDataWebAPI.Models.Regions", "Region")
                        .WithMany("Grids")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("GridDataWebAPI.Models.Measures", b =>
                {
                    b.HasOne("GridDataWebAPI.Models.Nodes", "Node")
                        .WithMany("Measures")
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Node");
                });

            modelBuilder.Entity("GridDataWebAPI.Models.Nodes", b =>
                {
                    b.HasOne("GridDataWebAPI.Models.Regions", "Region")
                        .WithMany("Nodes")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("GridDataWebAPI.Models.Nodes", b =>
                {
                    b.Navigation("Measures");
                });

            modelBuilder.Entity("GridDataWebAPI.Models.Regions", b =>
                {
                    b.Navigation("Grids");

                    b.Navigation("Nodes");
                });
#pragma warning restore 612, 618
        }
    }
}
